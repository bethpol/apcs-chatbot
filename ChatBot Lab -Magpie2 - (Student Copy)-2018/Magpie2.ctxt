#BlueJ class context
comment0.target=Magpie2
comment0.text=\n\ A\ program\ to\ carry\ on\ conversations\ with\ a\ human\ user.\n\ This\ is\ the\ initial\ version\ that\:\ \ \n\ <ul><li>\n\ \ \ \ \ \ \ Uses\ indexOf\ to\ find\ strings\n\ </li><li>\n\ \ \ \ \ \ \ \ \ \ Handles\ responding\ to\ simple\ words\ and\ phrases\ \n\ </li></ul>\n\ This\ version\ uses\ a\ nested\ if\ to\ handle\ default\ responses.\n\ @author\ Laurie\ White\n\ @version\ April\ 2012\n
comment1.params=
comment1.target=java.lang.String\ getGreeting()
comment1.text=\n\ Insert\ your\ own\ greeting\ for\ your\ unique\ chatbot\ \n\ @return\ a\ greeting\n
comment10.params=statement
comment10.target=boolean\ petStatement(java.lang.String)
comment10.text=\n\ Create\ our\ own\ method\ to\ respond\ to\ the\ keywords\ of\ your\ own\ choosing.\n\ Replace\ the\ method\ name\ and\ construct\ your\ own\ if\ else\ block.\n\ Put\ method\ call\ into\ the\ getResponse\ method\n
comment11.params=statement
comment11.target=boolean\ greeting(java.lang.String)
comment11.text=\n\ Create\ our\ own\ method\ to\ respond\ to\ the\ keywords\ of\ your\ own\ choosing.\n\ Replace\ the\ method\ name\ and\ construct\ your\ own\ if\ else\ block.\n\ Put\ method\ call\ into\ the\ getResponse\ method\n
comment12.params=statement
comment12.target=boolean\ name(java.lang.String)
comment12.text=\n\ Create\ our\ own\ method\ to\ respond\ to\ the\ keywords\ of\ your\ own\ choosing.\n\ Replace\ the\ method\ name\ and\ construct\ your\ own\ if\ else\ block.\n\ Put\ method\ call\ into\ the\ getResponse\ method\n
comment13.params=statement
comment13.target=boolean\ accessor(java.lang.String)
comment14.params=statement
comment14.target=boolean\ color(java.lang.String)
comment15.params=statement
comment15.target=boolean\ whereLive(java.lang.String)
comment16.params=statement
comment16.target=boolean\ friend(java.lang.String)
comment17.params=statement
comment17.target=boolean\ iq(java.lang.String)
comment18.params=statement
comment18.target=boolean\ yourName(java.lang.String)
comment18.text=\n\ Create\ our\ own\ method\ to\ respond\ to\ the\ keywords\ of\ your\ own\ choosing.\n\ Replace\ the\ method\ name\ and\ construct\ your\ own\ if\ else\ block.\n\ Put\ method\ call\ into\ the\ getResponse\ method\n
comment19.params=statement
comment19.target=boolean\ howDoing(java.lang.String)
comment2.params=statement
comment2.target=java.lang.String\ getResponse(java.lang.String)
comment2.text=\n\ Gives\ a\ response\ to\ a\ user\ statement\n\ \n\ @param\ statement\n\ \ \ \ \ \ \ \ \ \ \ \ the\ user\ statement\n\ @return\ a\ response\ based\ on\ the\ rules\ given\n
comment20.params=
comment20.target=java.lang.String\ getRandomResponse()
comment20.text=\n\ Pick\ a\ default\ response\ to\ use\ if\ nothing\ else\ fits.\n\ @return\ a\ non-committal\ string\n
comment21.params=
comment21.target=java.lang.String\ greeting()
comment22.params=statement\ goal\ startPos
comment22.target=int\ findKeyword(java.lang.String,\ java.lang.String,\ int)
comment22.text=\n\ Search\ for\ one\ word\ in\ phrase.\ The\ search\ is\ not\ case\n\ sensitive.\ This\ method\ will\ check\ that\ the\ given\ goal\n\ is\ not\ a\ substring\ of\ a\ longer\ string\ (so,\ for\n\ example,\ "I\ know"\ does\ not\ contain\ "no").\n\n\ @param\ statement\n\ \ \ \ \ \ \ \ \ \ \ \ the\ string\ to\ search\n\ @param\ goal\n\ \ \ \ \ \ \ \ \ \ \ \ the\ string\ to\ search\ for\n\ @param\ startPos\n\ \ \ \ \ \ \ \ \ \ \ \ the\ character\ of\ the\ string\ to\ begin\ the\n\ \ \ \ \ \ \ \ \ \ \ \ search\ at\n\ @return\ the\ index\ of\ the\ first\ occurrence\ of\ goal\ in\n\ \ \ \ \ \ \ \ \ statement\ or\ -1\ if\ it's\ not\ found\n
comment23.params=statement\ goal
comment23.target=int\ findKeyword(java.lang.String,\ java.lang.String)
comment23.text=\n\ Search\ for\ one\ word\ in\ phrase.\ The\ search\ is\ not\ case\n\ sensitive.\ This\ method\ will\ check\ that\ the\ given\ goal\n\ is\ not\ a\ substring\ of\ a\ longer\ string\ (so,\ for\n\ example,\ "I\ know"\ does\ not\ contain\ "no").\ The\ search\n\ begins\ at\ the\ beginning\ of\ the\ string.\n\ \n\ @param\ statement\n\ \ \ \ \ \ \ \ \ \ \ \ the\ string\ to\ search\n\ @param\ goal\n\ \ \ \ \ \ \ \ \ \ \ \ the\ string\ to\ search\ for\n\ @return\ the\ index\ of\ the\ first\ occurrence\ of\ goal\ in\n\ \ \ \ \ \ \ \ \ statement\ or\ -1\ if\ it's\ not\ found\n
comment3.params=statement
comment3.target=boolean\ negativeStatement(java.lang.String)
comment4.params=statement
comment4.target=boolean\ familyStatement(java.lang.String)
comment5.params=statement
comment5.target=boolean\ maleTeacher(java.lang.String)
comment6.params=statement
comment6.target=boolean\ jobStatement(java.lang.String)
comment7.params=statement
comment7.target=boolean\ education(java.lang.String)
comment8.params=statement
comment8.target=boolean\ femaleTeacher(java.lang.String)
comment9.params=statement
comment9.target=boolean\ shortStatement(java.lang.String)
numComments=24
